import type { IncomingMessage } from "node:http";
type Nullable<T, K extends keyof T> = {
    [P in K]: T[P] | null;
} & Omit<T, K>;
export declare function createStream<T>(asyncIter: AsyncIterableIterator<T>, cancel: () => PromiseLike<void>): ReadableStream<T> & AsyncDisposable & AsyncIterable<T>;
export declare function ensureAsyncIterable(stream: Nullable<IncomingMessage, "socket"> | ReadableStream<Uint8Array>): {
    cancel(): Promise<void>;
    iterable: AsyncIterable<Uint8Array>;
};
export {};
//# sourceMappingURL=utils.d.ts.map